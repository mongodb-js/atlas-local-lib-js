/* auto-generated by NAPI-RS */
/* eslint-disable */
export declare class Client {
  static connect(): Client
  createDeployment(createDeplomentOptions: CreateDeploymentOptions): Promise<Deployment>
  listDeployments(): Promise<Array<Deployment>>
  deleteDeployment(deploymentName: string): Promise<void>
  getDeployment(deploymentName: string): Promise<Deployment>
  getConnectionString(deploymentName: string): Promise<string>
  getDeploymentId(clusterIdOrName: string): Promise<string>
}

export type BindingType =  'Loopback'|
'AnyInterface'|
'Specific';

export interface CreateDeploymentOptions {
  name?: string
  image?: string
  mongodbVersion?: string
  waitUntilHealthy?: boolean
  waitUntilHealthyTimeout?: number
  creationSource?: CreationSource
  localSeedLocation?: string
  mongodbInitdbDatabase?: string
  mongodbInitdbRootPasswordFile?: string
  mongodbInitdbRootPassword?: string
  mongodbInitdbRootUsernameFile?: string
  mongodbInitdbRootUsername?: string
  mongotLogFile?: string
  runnerLogFile?: string
  doNotTrack?: boolean
  telemetryBaseUrl?: string
  mongodbPortBinding?: MongoDBPortBinding
}

export interface CreationSource {
  type: CreationSourceType
  source: string
}

export type CreationSourceType =  'AtlasCLI'|
'Container'|
'MCPServer'|
'Other';

export interface Deployment {
  containerId: string
  name?: string
  state: State
  portBindings?: MongoDBPortBinding
  mongodbType: MongodbType
  mongodbVersion: string
  creationSource?: CreationSource
  localSeedLocation?: string
  mongodbInitdbDatabase?: string
  mongodbInitdbRootPasswordFile?: string
  mongodbInitdbRootPassword?: string
  mongodbInitdbRootUsernameFile?: string
  mongodbInitdbRootUsername?: string
  mongotLogFile?: string
  runnerLogFile?: string
  doNotTrack?: string
  telemetryBaseUrl?: string
}

export interface MongoDbPortBinding {
  type: BindingType
  ip: string
  port?: number
}

export type MongodbType =  'Community'|
'Enterprise';

export type State =  'Created'|
'Dead'|
'Exited'|
'Paused'|
'Removing'|
'Restarting'|
'Running';
